---
title: "Script"
author: "Mariana Rius"
date: "4/24/2020"
output:
md_document:
variant: markdown_github
html_document
---
knitr::opts_knit$set(root.dir = 'C:/Users/alexg/Google Drive/05-Proyectos/restlab_workshop/01-MarianaRius-Growthcurver/')
options(stringsAsFactors = F)
#total wells
tw<-96
#filename
fn<-"data/LAA-E2.xlsx"
#replicates?
x<-3
#number of antibiotic concentrations
nc<-12
#number of strains #JUST AURLI
ns<-1
library("tidyverse")
library("readxl")
sheets <- excel_sheets(fn)
exceltable <- sheets  %>%
as.list() %>%
map(read_excel,path=fn,col_names = FALSE) %>%
map(as_tibble)
names(exceltable) <- paste("t-", sheets, sep = "")
sheetslist <- exceltable %>%
map(slice,27:34) %>% #This selects the OD values
map(select,-1)
for (i in 1:length(sheetslist)){
colnames(sheetslist[[i]]) <- as.character(c(paste0(0,1:9),10:12))
sheetslist[[i]]$rows <- LETTERS[1:8]
sheetslist[[i]] <- sheetslist[[i]] %>% gather(1:12,key="column",value="OD")
}
sheetslist <- sheetslist %>%
map(as.tibble) %>%
map(mutate,well=paste0(rows,column)) %>%
map(mutate,OD=as.numeric(OD))
sheetslist[[1]] %>%
head()
allSheets[[1]] %>%
head()
allSheets[[1]] %>%
as.data.frame()
#Select only the first 3 rows
allSheets <- sheetslist %>%
map(filter,rows==c("A","B","C")) %>%
map(arrange,well)
allSheets[[1]]
allSheets[[1]] %>% as_tibble()
allSheets[[1]]
allSheets[[1]] %>% head()
time %>%
head()
time
#calculate difference in time
timelist <- exceltable  %>%
map(select,2) %>%
map(slice,23:24)
vec <- timelist %>%
unlist()
vec <- vec[!is.na(vec)]
library(lubridate)
time <- data.frame(ID=sheets,
time = mdy_hms(vec)) %>%
as_tibble() %>%
arrange(time)%>%
mutate(dur = time - time[1])
dur<-time$dur %>%
map_dfc(dseconds)
#Select only the first 3 rows
allSheets <- sheetslist %>%
map(filter,rows==c("A","B","C")) %>%
map(arrange,well)
allSheets[[1]] %>%
head()
time
time %>% head()
final %>%
head()
allSheets1 <- allSheets %>%
map(select,well,OD)%>%
map(spread,key="well",value="OD")
df <- bind_rows(allSheets1, .id = "ID") %>%
arrange(ID) %>%
as.data.frame()
t <- time %>%
arrange(ID)%>%
select(-ID) %>%
as.data.frame()
final <- cbind(t,df) %>%
as_tibble() %>%
select(-ID,-time) %>%
rename(time=dur) %>%
mutate(time=as.numeric(time))%>%
as.data.frame()
final %>%
head()
table1 <- final %>% as_tibble() %>%
gather(2:dim(final)[2],key = "ID",value="OD")
table1
table1 %>% ggplot(aes(x=time,y=OD,color=ID))+
geom_point()+
facet_wrap(.~ID)+
theme_minimal()+
geom_smooth(se=FALSE)+
labs(title = "Growth Experiments",
subtitle = "Plots of Optical Density as a function of time",
caption = "Data source: LAA-E2.xlsx")
table1 <- final %>% as_tibble() %>%
gather(2:dim(final)[2],key = "ID",value="OD")
table1 %>% ggplot(aes(x=time,y=OD,color=ID))+
geom_point()+
facet_wrap(.~ID)+
theme_minimal()+
geom_smooth(se=FALSE)+
labs(title = "Growth Experiments",
subtitle = "Plots of Optical Density as a function of time",
caption = "Data source: LAA-E2.xlsx")
library("growthcurver")
gc_out <- SummarizeGrowthByPlate(final)
gc_out %>%
head()
# Plot a histogram of the sigma values in order to check for outliers
gc_out %>%
ggplot(aes(x=sigma))+
theme_minimal()+
labs(title = "Histogram of sigma values",
caption = "Data source: LAA-E2.xlsx")+
geom_histogram(fill="lightblue",col="darkblue")
gc_out %>%
gather(2:9,key="parameter",value = "value") %>%
select(-note) %>%
ggplot(aes(y=value,x=parameter))+
theme_minimal()+
facet_wrap(.~parameter,scales="free_y")+
labs(title = "Distribution of the parameter",
caption = "Data source: LAA-E2.xlsx")+
geom_boxplot()
